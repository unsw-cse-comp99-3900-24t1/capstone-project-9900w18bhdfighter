# Generated by Django 5.0.6 on 2024-07-21 15:33

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('AreaID', models.AutoField(primary_key=True, serialize=False)),
                ('AreaName', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('ContactID', models.AutoField(primary_key=True, serialize=False)),
                ('IsFixed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('GroupID', models.AutoField(primary_key=True, serialize=False)),
                ('GroupName', models.CharField(max_length=255, unique=True)),
                ('GroupDescription', models.TextField()),
                ('MaxMemberNumber', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='GroupProjectsLink',
            fields=[
                ('GroupProjectsLinkID', models.AutoField(primary_key=True, serialize=False)),
                ('GroupID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.group')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('NotificationID', models.AutoField(primary_key=True, serialize=False)),
                ('Type', models.CharField(choices=[('personal', 'personal'), ('group', 'group')], max_length=255)),
                ('Message', models.TextField()),
                ('AdditionalData', models.JSONField(blank=True, null=True)),
                ('CreatedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('FromGroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.group')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationReceiver',
            fields=[
                ('NotificationReceiverID', models.AutoField(primary_key=True, serialize=False)),
                ('IsRead', models.BooleanField(default=False)),
                ('Notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.notification')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('ProjectID', models.AutoField(primary_key=True, serialize=False)),
                ('ProjectName', models.CharField(max_length=255)),
                ('ProjectDescription', models.TextField()),
                ('ProjectOwner', models.CharField(max_length=255)),
                ('MaxNumOfGroup', models.IntegerField(default=1)),
                ('DueTime', models.DateTimeField()),
                ('Groups', models.ManyToManyField(through='myapp.GroupProjectsLink', to='myapp.group')),
            ],
        ),
        migrations.AddField(
            model_name='groupprojectslink',
            name='ProjectID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.project'),
        ),
        migrations.CreateModel(
            name='GroupPreference',
            fields=[
                ('PreferenceID', models.AutoField(primary_key=True, serialize=False)),
                ('Rank', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3)])),
                ('Lock', models.BooleanField(blank=True, default=False, null=True)),
                ('Group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.group')),
                ('Preference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.project')),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='Preferences',
            field=models.ManyToManyField(through='myapp.GroupPreference', to='myapp.project'),
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('SkillID', models.AutoField(primary_key=True, serialize=False)),
                ('SkillName', models.CharField(max_length=255)),
                ('Area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.area')),
            ],
        ),
        migrations.CreateModel(
            name='SkillProject',
            fields=[
                ('SkillProjectID', models.AutoField(primary_key=True, serialize=False)),
                ('Project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.project')),
                ('Skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.skill')),
            ],
        ),
        migrations.CreateModel(
            name='StudentArea',
            fields=[
                ('StudentAreaID', models.AutoField(primary_key=True, serialize=False)),
                ('Area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.area')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('UserID', models.AutoField(primary_key=True, serialize=False)),
                ('FirstName', models.CharField(max_length=50)),
                ('LastName', models.CharField(max_length=50)),
                ('EmailAddress', models.CharField(max_length=255, unique=True)),
                ('Passwd', models.CharField(max_length=255)),
                ('UserRole', models.IntegerField(blank=True, choices=[(1, 'student'), (2, 'client'), (3, 'tut'), (4, 'cord'), (5, 'admin')], default=1, null=True)),
                ('UserInformation', models.CharField(max_length=255)),
                ('Areas', models.ManyToManyField(through='myapp.StudentArea', to='myapp.area')),
                ('Contacts', models.ManyToManyField(through='myapp.Contact', to='myapp.user')),
                ('Notifications', models.ManyToManyField(through='myapp.NotificationReceiver', to='myapp.notification')),
            ],
        ),
        migrations.AddField(
            model_name='studentarea',
            name='User',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.user'),
        ),
        migrations.AddField(
            model_name='project',
            name='CreatedBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_projects', to='myapp.user'),
        ),
        migrations.AddField(
            model_name='notificationreceiver',
            name='Receiver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.user'),
        ),
        migrations.AddField(
            model_name='notification',
            name='FromUser',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications_sent', to='myapp.user'),
        ),
        migrations.AddField(
            model_name='notification',
            name='ReadBy',
            field=models.ManyToManyField(related_name='read_notifications', to='myapp.user'),
        ),
        migrations.AddField(
            model_name='notification',
            name='Receivers',
            field=models.ManyToManyField(related_name='notifications_received', through='myapp.NotificationReceiver', to='myapp.user'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('MessageID', models.AutoField(primary_key=True, serialize=False)),
                ('Content', models.TextField()),
                ('CreatedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('IsRead', models.BooleanField()),
                ('Receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='myapp.user')),
                ('Sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='myapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='GroupUsersLink',
            fields=[
                ('GroupUsersLinkID', models.AutoField(primary_key=True, serialize=False)),
                ('GroupID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.group')),
                ('UserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.user')),
            ],
            options={
                'unique_together': {('UserID', 'GroupID')},
            },
        ),
        migrations.CreateModel(
            name='GroupMessage',
            fields=[
                ('GroupMessageID', models.AutoField(primary_key=True, serialize=False)),
                ('Content', models.TextField()),
                ('CreatedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('ReceiverGroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_group_messages', to='myapp.group')),
                ('ReadBy', models.ManyToManyField(related_name='read_group_messages', to='myapp.user')),
                ('Sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_group_messages', to='myapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='GroupAssignProject',
            fields=[
                ('GroupID', models.AutoField(primary_key=True, serialize=False)),
                ('AllocatedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('ProgressStatus', models.CharField(choices=[('To Do', 'To Do'), ('In Progress', 'In Progress'), ('Done', 'Done')], default='To Do', max_length=20)),
                ('Project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.project')),
                ('Allocated', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.user')),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='CreatedBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups_created', to='myapp.user'),
        ),
        migrations.AddField(
            model_name='group',
            name='GroupMembers',
            field=models.ManyToManyField(through='myapp.GroupUsersLink', to='myapp.user'),
        ),
        migrations.AddField(
            model_name='contact',
            name='Contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='myapp.user'),
        ),
        migrations.AddField(
            model_name='contact',
            name='ContactUser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.user'),
        ),
        migrations.AlterUniqueTogether(
            name='groupprojectslink',
            unique_together={('GroupID', 'ProjectID')},
        ),
        migrations.CreateModel(
            name='GroupSkillEvaluation',
            fields=[
                ('GroupSkillEvaluationID', models.AutoField(primary_key=True, serialize=False)),
                ('Note', models.CharField(blank=True, max_length=255, null=True)),
                ('Score', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)])),
                ('EvaluateGroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.group')),
                ('Skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.skill')),
            ],
            options={
                'unique_together': {('EvaluateGroup', 'Skill')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='contact',
            unique_together={('Contact', 'ContactUser')},
        ),
    ]
